version: 2.1
orbs:
  docker: circleci/docker@1.6.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
    lint:
        docker:
            - image: httpd:2.4
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                name: lint
                command: |
                    apt-get update && apt-get install make unzip awscli wget -y && make installBase && make lint
    buildandpush:
        executor: docker/docker
        steps:
          - setup_remote_docker
          - checkout
          - docker/check
          - docker/build:
              image: moazario/siteimage
              tag: 'siteimage'
          - docker/push:
              digest-path: /tmp/digest.txt
              image: moazario/siteimage
              tag: 'siteimage'
          - run:
              command: |
                echo "Digest is: $(</tmp/digest.txt)"


    deploy:
        docker:
            - image: httpd:2.4
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                name: deploy
                no_output_timeout: 20m
                working_directory: ~/repo
                command: |
                    apt-get update && apt-get install make unzip awscli wget -y && make installBase && bash bluegreen.sh

    create-deployment:
        executor: aws-eks/python3
        parameters:
          cluster-name:
            description: |
              Name of the EKS cluster
            type: string
        steps:
          - checkout
          - aws-eks/update-kubeconfig-with-authenticator:
              cluster-name: << parameters.cluster-name >>
              install-kubectl: true
          - kubernetes/create-or-update-resource:
              resource-file-path: "tests/nginx-deployment/deployment.yaml"
              resource-name: "deployment/nginx-deployment"
              get-rollout-status: true
              show-kubectl-command: true



            
            
workflows:
  prod-deployment:
    jobs:
      - lint
      - buildandpush:
            requires: [lint]
      #- deploy:
            #requires: [buildandpush]
      - aws-eks/create-cluster:
          cluster-name: eks-demo-deployment
      - create-deployment:
          cluster-name: eks-demo-deployment
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: eks-demo-deployment
          container-image-updates: 'nginx=nginx:1.9.1'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: nginx-deployment
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/nginx-deployment
      - aws-eks/delete-cluster:
          cluster-name: eks-demo-deployment
          requires:
            - aws-eks/update-container-image
